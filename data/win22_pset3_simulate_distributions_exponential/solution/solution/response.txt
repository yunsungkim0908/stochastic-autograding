import random 

def simulate_bernoulli(p = 0.4): 
    # We did this one for you! 
    if random.uniform(0, 1) < p: 
        return 1 
    return 0 

def simulate_binomial(n = 20, p = 0.4): 
    x = 0 
    for i in range(n):
        x += simulate_bernoulli(p) 
    return x 

def simulate_geometric(p = 0.03): 
    n = 0 
    while not simulate_bernoulli(p): 
        n += 1 
    return n

def simulate_negative_binomial(r = 5, p = 0.03): 
    x = 0 
    for i in range(r): 
        x += simulate_geometric(p) 
    return x 

def simulate_poisson(lambda_parameter = 3.1): 
    n = 1000 
    p = lambda_parameter / n 
    return simulate_binomial(n, p) 

def simulate_exponential(lambda_parameter = 3.1): 
    n = 1000 
    p = lambda_parameter / n 
    x = 0 
    while not simulate_bernoulli(p): 
        x += 1 
    return x / n